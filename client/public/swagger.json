"{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Comprehensive API\",\n    \"description\": \"API for user authentication, database interactions, and AI-powered Q&A.\"\n  },\n  \"host\": \"localhost:5000\",\n  \"basePath\": \"/\",\n  \"schemes\": [\n    \"http\"\n  ],\n  \"paths\": {\n    \"/authenticate/login/\": {\n      \"post\": {\n        \"summary\": \"Login a user\",\n        \"description\": \"Authenticate a user using their email and password.\",\n        \"parameters\": [\n          {\n            \"in\": \"body\",\n            \"name\": \"body\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"email\": {\n                  \"type\": \"string\"\n                },\n                \"password\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Login successful\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized access\"\n          }\n        }\n      }\n    },\n    \"/authenticate/logout/\": {\n      \"post\": {\n        \"summary\": \"Logout a user\",\n        \"description\": \"Log out the currently logged-in user.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Logout successful\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized access\"\n          }\n        }\n      }\n    },\n    \"/authenticate/register/\": {\n      \"put\": {\n        \"summary\": \"Register a user\",\n        \"description\": \"Register a new user and send a verification email.\",\n        \"parameters\": [\n          {\n            \"in\": \"body\",\n            \"name\": \"body\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"email\": {\n                  \"type\": \"string\"\n                },\n                \"password\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Registration successful\"\n          },\n          \"401\": {\n            \"description\": \"Registration failed\"\n          }\n        }\n      }\n    },\n    \"/authenticate/reset-password/\": {\n      \"post\": {\n        \"summary\": \"Reset user password\",\n        \"description\": \"Reset the user's password using a reset code.\",\n        \"parameters\": [\n          {\n            \"in\": \"body\",\n            \"name\": \"body\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"email\": {\n                  \"type\": \"string\"\n                },\n                \"reset_code\": {\n                  \"type\": \"string\"\n                },\n                \"password\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Password reset successful\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized access\"\n          }\n        }\n      }\n    },\n    \"/authenticate/request-password-reset/\": {\n      \"post\": {\n        \"summary\": \"Request password reset\",\n        \"description\": \"Send a password reset code to the user's email.\",\n        \"parameters\": [\n          {\n            \"in\": \"body\",\n            \"name\": \"body\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"email\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Reset code sent successfully\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized access\"\n          }\n        }\n      }\n    },\n    \"/authenticate/verify/\": {\n      \"post\": {\n        \"summary\": \"Verify a user\",\n        \"description\": \"Verify a user's account using a verification code.\",\n        \"parameters\": [\n          {\n            \"in\": \"body\",\n            \"name\": \"body\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"verification_code\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Verification successful\"\n          },\n          \"401\": {\n            \"description\": \"Verification failed\"\n          }\n        }\n      }\n    },\n    \"/database/get-user-information/\": {\n      \"get\": {\n        \"summary\": \"Get user information\",\n        \"description\": \"Retrieve the logged-in user's information.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User information retrieved successfully\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/User\"\n            }\n          },\n          \"400\": {\n            \"description\": \"Failed to retrieve user information\"\n          }\n        }\n      }\n    },\n    \"/database/get-scrape-history/\": {\n      \"get\": {\n        \"summary\": \"Get scrape history\",\n        \"description\": \"Retrieve the scrape history for the logged-in user.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Scrape history retrieved successfully\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"scrapes\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/definitions/Scrape\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Failed to retrieve scrape history\"\n          }\n        }\n      }\n    },\n    \"/database/change-name/\": {\n      \"post\": {\n        \"summary\": \"Change user name\",\n        \"description\": \"Update the name of the logged-in user.\",\n        \"parameters\": [\n          {\n            \"in\": \"body\",\n            \"name\": \"body\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Name changed successfully\"\n          },\n          \"400\": {\n            \"description\": \"Failed to change name\"\n          }\n        }\n      }\n    },\n    \"/database/get-all-users/\": {\n      \"post\": {\n        \"summary\": \"Get all users\",\n        \"description\": \"Retrieve a list of all users (Admin only).\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of users retrieved successfully\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/User\"\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Failed to retrieve users\"\n          }\n        }\n      }\n    },\n    \"/database/get-endpoint-usage/\": {\n      \"get\": {\n        \"summary\": \"Get endpoint usage\",\n        \"description\": \"Retrieve usage statistics for all endpoints (Admin only).\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Endpoint usage statistics retrieved successfully\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Failed to retrieve endpoint usage statistics\"\n          }\n        }\n      }\n    },\n    \"/qna/query\": {\n      \"get\": {\n        \"summary\": \"Query the AI server\",\n        \"description\": \"Send a URL and a prompt to scrape and query the AI server for a response.\",\n        \"parameters\": [\n          {\n            \"name\": \"url\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"The URL to scrape.\"\n          },\n          {\n            \"name\": \"prompt\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"The prompt to send to the AI server.\"\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"The API key for authentication in the format 'Bearer {API_KEY}'.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Query executed successfully\",\n            \"schema\": {\n              \"type\": \"object\"\n            }\n          },\n          \"400\": {\n            \"description\": \"Error occurred while processing the query\"\n          }\n        }\n      }\n    }\n  },\n  \"definitions\": {\n    \"User\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\"\n        },\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"is_verified\": {\n          \"type\": \"boolean\"\n        }\n      }\n    },\n    \"Scrape\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\"\n        },\n        \"user_id\": {\n          \"type\": \"integer\"\n        },\n        \"data\": {\n          \"type\": \"string\"\n        },\n        \"created_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        }\n      }\n    }\n  }\n}"
